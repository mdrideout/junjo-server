services:
  junjo-server-backend:
    container_name: junjo-server-backend
    restart: unless-stopped
    build:
      context: .
      dockerfile: backend/Dockerfile
    volumes:
      - ./.dbdata/sqlite:/dbdata/sqlite
      - ./.dbdata/duckdb:/dbdata/duckdb
    ports:
      - "1323:1323"
    networks:
      - junjo-network
    env_file:
      - .env
    environment:
      - DB_SQLITE_PATH=/dbdata/sqlite/junjo.db
      - DB_DUCKDB_PATH=/dbdata/duckdb/traces.duckdb
      - INGESTION_HOST=junjo-server-ingestion
      - INGESTION_PORT=50052
      - RUN_MIGRATIONS=true
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:1323/ping')"]
      interval: 5s
      timeout: 3s
      retries: 25
      start_period: 5s

  junjo-server-ingestion:
    container_name: junjo-server-ingestion
    restart: unless-stopped
    build:
      context: .
      dockerfile: ingestion-service/Dockerfile
      target: ${JUNJO_BUILD_TARGET:-production}
    volumes:
      - ./ingestion-service:/app
      - ./.dbdata/badgerdb:/dbdata/badgerdb
    ports:
      - "50051:50051"
      - "50052:50052"
    networks:
      - junjo-network
    env_file:
      - .env
    environment:
      - BACKEND_GRPC_HOST=junjo-server-backend
      - BACKEND_GRPC_PORT=50053
    depends_on:
      junjo-server-backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "grpc_health_probe", "-addr=localhost:50052"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s

  junjo-server-frontend:
    container_name: junjo-server-frontend
    restart: unless-stopped
    build:
      context: .
      dockerfile: frontend/Dockerfile
      target: ${JUNJO_BUILD_TARGET:-production}
    volumes:
      - frontend-modules:/app/node_modules
      - ./frontend:/app
    ports:
      - "5151:5151"
      - "5152:5151"
      - "5153:80"
    env_file:
      - .env
    depends_on:
      junjo-server-backend:
        condition: service_healthy
      junjo-server-ingestion:
        condition: service_healthy

volumes:
  frontend-modules:

networks:
  junjo-network:
    driver: bridge
