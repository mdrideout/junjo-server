services:
  jui-be:
    container_name: jui-be
    restart: unless-stopped
    build:
      context: ./backend
      target: ${JUNJO_BUILD_TARGET:-production} # Default to 'production', set to "development" for local air hot-reloading
    volumes:
      - ./backend:/app # Mount the backend code for hot reloading
      - ./dbdata/sqlite:/dbdata/sqlite # SQLite storage
      - ./dbdata/duckdb:/dbdata/duckdb # DuckDB storage
    ports:
      - "1323:1323" # Echo API server port
      - "50051:50051" # gRPC telemetry server port
    networks:
      - caddy-proxy-network
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:1323/ping"]
      interval: 5s
      timeout: 3s
      retries: 25
      start_period: 5s

  jui-fe:
    container_name: jui-fe
    build:
      context: ./frontend
      target: ${JUNJO_BUILD_TARGET:-production} # Default to 'production', set to "development" for local air hot-reloading
    volumes:
      - frontend-modules:/app/node_modules # Dev only: Named volume for node_modules
      - ./frontend:/app # Dev only: Mount the frontend code for hot reloading
    ports:
      # Development ports (Vite)
      - "5151:5151" # Vite server
      - "5152:5151" # Vite hmr (map hmr port to host port)
      - "5153:80" # Production port to Nginx mapping
    env_file:
      - .env
    depends_on:
      jui-be:
        condition: service_healthy # Wait for jui-be to be healthy before starting jui-fe

  junjo-jaeger:
    image: jaegertracing/jaeger:2.3.0
    container_name: junjo-jaeger
    # ports: # No ports should be directly exposed - traces are relayed through jui-be
    # - "16686:16686" # Jaeger UI - uses Caddy reverse proxy
    # - "4317:4317" # OTLP gRPC - uses internal network forwarding from jui-be
    # - "4318:4318" # OTLP HTTP - uses internal network forwarding from jui-be
    volumes:
      - ./jaeger/config.yml:/jaeger/config.yml # Mount the config file
      - jaeger_badger_store:/data/jaeger/badger/jaeger
      - jaeger_badger_store_archive:/data/jaeger/badger/jaeger_archive
    command: --config /jaeger/config.yml
    user: root # Currently requires root for writing to the vol (track: https://github.com/jaegertracing/jaeger/issues/6458)
    networks:
      - caddy-proxy-network

  jui-caddy:
    build:
      context: ./caddy
    container_name: jui-caddy
    env_file:
      - .env
    ports:
      - "80:80" # For HTTP -> HTTPS redirect (optional in dev)
      - "443:443" # For HTTPS
      - "443:443/udp" # For HTTP/3
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile # Mount your Caddyfile
      - caddy_data:/data # Persist Caddy data (certificates)
    networks:
      - caddy-proxy-network
    depends_on:
      - jui-be
      - jui-fe
      - junjo-jaeger

volumes:
  frontend-modules:
  junjo_sqlite_data:
  jaeger_badger_store:
  jaeger_badger_store_archive:
  caddy_data:

networks:
  caddy-proxy-network:
    external: true # Server shared network
