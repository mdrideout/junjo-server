# This workflow builds and pushes Docker images for multiple services to Docker Hub.
# It uses a matrix strategy to build amd64 and arm64 images in parallel for each
# service, then merges them into multi-platform manifests.

name: Publish Docker Images

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build:
    name: Build ${{ matrix.service }} for ${{ matrix.arch }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - service: backend
            platform: linux/amd64
            arch: amd64
            runs-on: ubuntu-latest
          - service: backend
            platform: linux/arm64
            arch: arm64
            runs-on: ubuntu-24.04-arm
          - service: frontend
            platform: linux/amd64
            arch: amd64
            runs-on: ubuntu-latest
          - service: frontend
            platform: linux/arm64
            arch: arm64
            runs-on: ubuntu-24.04-arm
          - service: ingestion-service
            platform: linux/amd64
            arch: amd64
            runs-on: ubuntu-latest
          - service: ingestion-service
            platform: linux/arm64
            arch: arm64
            runs-on: ubuntu-24.04-arm
    runs-on: ${{ matrix.runs-on }}
    permissions:
      contents: read
      packages: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: mdrideout/junjo-server-${{ matrix.service }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,prefix=,suffix=,format=short
          flavor: |
            suffix=-${{ matrix.arch }}
            latest=false

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.service }}
          file: ./${{ matrix.service }}/Dockerfile
          target: production
          builder: ${{ steps.buildx.outputs.name }}
          platforms: ${{ matrix.platform }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=build-${{ matrix.service }}-${{ matrix.arch }}
          cache-to: type=gha,mode=max,scope=build-${{ matrix.service }}-${{ matrix.arch }}

  merge-and-push:
    name: Create and Push ${{ matrix.service }} Manifest
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        service: [backend, frontend, ingestion-service]
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: mdrideout/junjo-server-${{ matrix.service }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Create and push manifest
        run: |
          tags=$(echo "${{ steps.meta.outputs.tags }}" | tr ',' '\n')
          for tag in $tags; do
            echo "Creating manifest for tag: $tag"
            docker buildx imagetools create -t "$tag" \
              "${tag}-amd64" \
              "${tag}-arm64"
          done

  update-hub-description:
    name: Update ${{ matrix.service }} Docker Hub Description
    runs-on: ubuntu-latest
    needs: merge-and-push
    strategy:
      fail-fast: false
      matrix:
        service: [backend, frontend, ingestion-service]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Update Docker Hub description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: mdrideout/junjo-server-${{ matrix.service }}
          readme-filepath: ./README.md