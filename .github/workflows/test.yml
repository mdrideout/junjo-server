name: Backend Tests

on:
  pull_request:
    branches: [ master ]
    paths:
      - 'backend/**'
      - '.github/workflows/test.yml'

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
      - uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: uv sync --all-extras

      - name: Run linter
        run: uv run ruff check app/

      - name: Run unit tests (excluding integration)
        run: uv run pytest -m "not integration" -v

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
      - uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.13'

      - name: Create .env file with secrets (using temp test databases)
        run: |
          cat > ../.env << EOF
          JUNJO_BUILD_TARGET=development
          JUNJO_ENV=development
          JUNJO_SESSION_SECRET=${{ secrets.JUNJO_SESSION_SECRET }}
          JUNJO_SECURE_COOKIE_KEY=${{ secrets.JUNJO_SECURE_COOKIE_KEY }}
          JUNJO_ALLOW_ORIGINS=http://localhost:5151,http://localhost:5153
          PORT=1323
          GRPC_PORT=50053
          GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}
          OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY=${{ secrets.ANTHROPIC_API_KEY }}
          DB_SQLITE_PATH=/tmp/junjo-test-ci.db
          DB_DUCKDB_PATH=/tmp/junjo-test-ci.duckdb
          LOG_LEVEL=info
          LOG_FORMAT=text
          EOF

      - name: Install dependencies
        run: uv sync --all-extras

      - name: Run database migrations
        run: uv run alembic upgrade head

      - name: Start backend server in background
        run: |
          uv run uvicorn app.main:app --host 0.0.0.0 --port 1323 &
          echo "Waiting for backend to be ready..."
          sleep 5
          curl --retry 10 --retry-delay 1 --retry-connrefused http://localhost:1323/health

      - name: Run integration tests
        run: |
          uv run pytest -m "integration" -v \
            tests/test_api_keys_router.py \
            tests/test_llm_playground_router.py \
            app/features/auth/test_router.py \
            app/features/internal_auth/

      - name: Show backend logs on failure
        if: failure()
        run: |
          echo "=== Backend process status ==="
          ps aux | grep uvicorn || true
