# === Development Environment Vars =============================================================>
# Build Target:
# Value: development || production
# The build target changes the library build to be optimized
# for production, or for local development with hot-reloading.
# - Development build frontend access:  http://localhost:5151
# - Production build frontend access:   http://localhost:5153
JUNJO_BUILD_TARGET="development"

# === Junjo Server Environment Vars =============================================================>
# Junjo Server's Running Environment:
# Value: development || production
# Implications for authentication and service linkage
# - Development: uses localhost and ports for services
# - Production: uses a production hostname and subdomains for services
JUNJO_ENV="development"

# Production Authentication Domain:
# Used When: JUNJO_ENV="production"
# 
# Set this to your production top level (root) domain
# that will be used for session cookie authentication.
# This will automatically cover all subdomains.
# 
# Example:
# JUNJO_PROD_AUTH_DOMAIN="example.com"
# COVERS:
#   - example.com
#   - www.example.com
#   - api.example.com
JUNJO_PROD_AUTH_DOMAIN="example.com"

# === Backend Vars =============================================================>
# Session Cookie Security (TWO KEYS REQUIRED for Python backend)
#
# IMPORTANT: Both keys MUST be base64-encoded strings (required by Fernet encryption).
#            Generate BOTH keys with the same command: openssl rand -base64 32
#
# 1. Session Secret (Signing - for integrity)
#    Provides INTEGRITY - prevents tampering with cookie data
#    REQUIRED FORMAT: Base64-encoded string
#    Generate with: openssl rand -base64 32
JUNJO_SESSION_SECRET=your_base64_secret_here
#
# 2. Secure Cookie Key (Encryption - for confidentiality)
#    Provides CONFIDENTIALITY - prevents reading cookie data
#    REQUIRED FORMAT: Base64-encoded 32-byte key (Fernet requires this exact format)
#    Generate with: openssl rand -base64 32
JUNJO_SECURE_COOKIE_KEY=your_base64_key_here

# Allowed Origins:
# A comma-separated list of allowed origins for CORS.
# If not set, all origins are allowed (*)
# Recommend: setting to your domains prevents other domains from attempting to send requests
# Example: JUNJO_ALLOW_ORIGINS=http://localhost:5151,http://localhost:5153,http://example.com,https://example.com
JUNJO_ALLOW_ORIGINS=http://localhost:5151,http://localhost:5153

# === INGESTION SERVICE VARS =============================================================>
BADGERDB_PATH=/dbdata/badgerdb

# === LOGGING CONFIGURATION ===================================================
# Log Level: debug, info, warn, error (default: info)
# Controls the minimum severity level for log output
# - debug: Show all logs including detailed diagnostics (use in development)
# - info:  Show informational messages and above (production default)
# - warn:  Show warnings and errors only
# - error: Show only error messages
LOG_LEVEL=info

# Log Format: json, text (default: json)
# Controls the output format of logs
# - json: Machine-readable JSON output (recommended for production)
# - text: Human-readable colored output (recommended for development)
LOG_FORMAT=text

# === AI SERVICE KEYS =============================================================================>
# Provider API Keys for LLM integrations
# Uncomment and set the API keys for the providers you want to use

# Google Gemini API Key
# Get your API key from: https://aistudio.google.com/app/apikey
GEMINI_API_KEY="your_gemini_api_key"

# OpenAI API Key
# Get your API key from: https://platform.openai.com/api-keys
OPENAI_API_KEY="your_openai_api_key"

# Anthropic API Key
# Get your API key from: https://console.anthropic.com/settings/keys
ANTHROPIC_API_KEY="your_anthropic_api_key"